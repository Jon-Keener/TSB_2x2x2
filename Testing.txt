New testing 20220924:
Blank tile replacement is almost working correctly...
  In pickLetter():
    replacing the blank tile with the letter_blank works,
    but removing the original blank tile from the rack doesn't,
    although the original blank tile appears to be removed:

    Uncaught TypeError: Failed to execute 'removeChild' on 'Node': parameter 1 is not of type 'Node'.
  
    I'd like to fix this before saving to GitHub...








New testing 20220908:
I got scoring to work for 3-or-more-letter words and removed the lookup functions,
but this broke scoring for stacked letters, so I reverted the change.

Logging is enabled for UP word testing:

2-letter UP words:
[1,4] - OK
[2,4] - OK
[2,5] - OK
[3,5] - OK

2-letter DW words:
[1,5] - OK
[2,4] - OK
[2,5] - OK
[2,4] - OK

2-letter DO words:
[1,4] - OK
[1,5] - OK
[2,5] - OK
[1,6] - OK

3-letter UP word:
[2,4] - OK

================================================================================

Stacking tests:
2-levels high:

--> upward stacking
(Z)5 + 2(I)1 + (T)1 = 8, OK
2(T)1 + 2(I)1 + 2(E)1 = 6, OK
(P)2 + 2(A)1 = 4, OK
2(L)1 + 2(A)1 = 4, OK

--> downward stacking
(Z)5 + 2(I)1 + (T)1 = 8, OK
2(W)2 + (E)1 = 5, OK
2(W)2 + 2(P)2 = 8, OK

--> down stacking
2(B)2 + (U)1 + (T)1 = 6, OK
2(B)2 + (U)1 + 2(S)1 = 7, OK

================================================================================

3-levels high:

3(O)1 + 2(P)2 = 8, OK
2(T)1 + 3(E)1 + 2(E)1 = 7, OK
2(L)1 + 3(I)1 = 5, OK

3(O)1 + 2(P)2 = 7, OK
3(O)1 + 3(D)1 = 6, OK

--> down stacking

3(K)3 + (U)1 + 2(S)1 = 12, OK
3(K)3 + (U)1 + 3(E)1 = 13, OK

================================================================================

4-levels high:

3(C)2 + 4(Y)2 = 14, OK


--> looking good for UP words, promote update to DW and DO words...





Continued Testing 20220830:

--> Test Cases
--> 2 letter UP words

score_words[]: ['od, [1,4], UP'] correct score
score_words[]: ['it, [2,4], UP'] correct score
score_words[]: ['du, [2,5], UP'] correct score
score_words[]: ['ex, [3,5], UP'] correct score

--> 2 letter DW words

score_words[]: ['li, [1,5], DW'] correct score
score_words[]: ['te, [1,4], DW'] correct score
score_words[]: ['li, [2,5], DW'] correct score
score_words[]: ['ex, [2,4], DW'] correct score

--> 2 letter DO words

score_words[]: ['to, [1,4], DO'] correct score
score_words[]: ['yi, [1,5], DO'] correct score
score_words[]: ['oh, [2,5], DO'] correct score
score_words[]: ['tt, [1,6], DO'] correct score

================================================================================

--> 3 letter UP word

score_words[]: ['raj, [2,4], UP'] correct score

--> 3 letter DW word

score_words[]: ['rid, [1,4], DW'] correct score

--> 3 letter DO word

score_words[]: ['mod, [1,5], DO'] correct score

================================================================================

Stacking on a single location:

score_words[]: ['me, [1,4], UP'] correct score
score_words[]: ['ve, [1,4], UP'] correct score (v doubled)
score_words[]: ['he, [1,4], UP'] correct score (h tripled)
score_words[]: ['de, [1,4], UP'] correct score (d quadrupled)
score_words[]: ['oe, [1,4], UP'] correct score (o quintupled)
score_words[]: ['fe, [1,4], UP'] correct score (f sextupled)

================================================================================

Multiple stacking test:

score_words[]: ['et, [1,4], DW'] correct score
score_words[]: ['ity, [1,4], DW'] correct score (i doubled)
score_words[]: ['itt, [1,4], DW'] correct score (i doubled and t doubled)
score_words[]: ['sat, [1,4], DW'] correct score (s tripled, a doubled, t doubled)
score_words[]: ['set, [1,4], DW'] correct score (s tripled, e tripled, t doubled)
score_words[]: ['sot, [1,4], DW'] correct score (s tripled, o quadrupled, t doubled)
score_words[]: ['rot, [1,4], DW'] correct score (r quadrupled, o quadrupled, t doubled)
score_words[]: ['got, [1,4], DW'] correct score (g quintupled, o quadrupled, t doubled)
score_words[]: ['tot, [1,4], DW'] correct score (t sextupled, o quadrupled, t doubled)

================================================================================
everything seems to be working, scoring-wise...
there are still issues with not being able to replay from the rack, and others...
check in these 2x2x2x changes [202208300, then promote to TSB.





correct - fixed switch statement in wordCheck() on 20220829
every first word I've tried scores correctly now, except for the 3-letter words.

Checking in the TSB_2x2x2 code 20220829 - fixed switch statement in wordCheck().

20220830 - corrected wordCheck by removing '.'s found in the element
20220830 - corrected wordCheck by using word = result[0];
           this also  got rid of the extra '.'s

================================================================================
















2:15 PM 8/29/20222:15 PM 8/29/2022
--> made word: at

wordCheck( position ):
gameController.js:1073 position: (3) [0, 1, 4]
gameController.js:1071 
gameController.js:1072 wordCheck( position ):
gameController.js:1073 position: (3) [0, 1, 5]
gameController.js:875 score_words[]: ['at, [1,4], UP']
gameController.js:798 
gameController.js:799 getLevel( position ):
gameController.js:800 position: 1,4
gameController.js:798 
gameController.js:799 getLevel( position ):
gameController.js:800 position: 1,5
gameController.js:1022 Player 1: at 2 = 2		<-- 2 getLevel() calls and the correct score

--> made words: at

gameController.js:786 
gameController.js:787 switchPlayer():
gameController.js:1071 
gameController.js:1072 wordCheck( position ):
gameController.js:1073 position: (3) [0, 2, 5]
gameController.js:875 score_words[]: (2) ['at, [1,4], UP', 'to, [1,5], DO']
gameController.js:798 
gameController.js:799 getLevel( position ):
gameController.js:800 position: 1,4
gameController.js:798 
gameController.js:799 getLevel( position ):
gameController.js:800 position: 1,5
gameController.js:798 
gameController.js:799 getLevel( position ):
gameController.js:800 position: 1,5
gameController.js:798 
gameController.js:799 getLevel( position ):
gameController.js:800 position: 2,5
gameController.js:1030 Player 2: at 4, to 4 = 8		<-- did not clear ['at', [1,4], UP'] from words[]
							<-- wordCheck did not find ['ao', [1,4], DW']

							









New Testing 20220811:

Test moving to [0, 1, 5] top-center:
expect Y: 1.low, X: 5.5

  Even/odd column: 1
  gameController.js:490 X: 5.42
  gameController.js:491 Y: 1.1396

  Even/odd column: 1
  gameController.js:490 X: 5.5
  gameController.js:491 Y: 1.1396

Test moving to [0, 1, 5] bottom-center:
expect Y: 1.high, X: 5.5

  Even/odd column: 1
  gameController.js:490 X: 5.46
  gameController.js:491 Y: 1.7864

  Even/odd column: 1
  gameController.js:490 X: 5.44
  gameController.js:491 Y: 1.7555999999999998

================================================================================

Now test moving to [0, 1, 4] top-center:
expect Y: 1.low, X: 4.5

  Even/odd column: 0
  gameController.js:490 X: 4.46
  gameController.js:491 Y: 1.6247 (this should be more like 1.1247)

  Even/odd column: 0
  gameController.js:490 X: 4.48
  gameController.js:491 Y: 1.6093 (this should be more like 1.1093)

And test moving to [0, 1, 4] bottom-center:
expect Y: 1.high, X: 4.5

  Even/odd column: 0
  gameController.js:490 X: 4.46
  gameController.js:491 Y: 2.2253000000000003 (this should be more like 1.7253) // wrong position!

  Even/odd column: 0
  gameController.js:490 X: 4.46
  gameController.js:491 Y: 2.2715 (this should be more like 1.7715) // wrong position!

================================================================================

Subtracting .5 from yPosition doesn't seem to be working...

Test moving to [0, 1, 4] bottom-center:

  Even/odd column: 0
  gameController.js:492 X: 4.44   // correct
  gameController.js:493 Y: 2.2561 // incorrect!

gameController.js:452 Even (indented) column:
gameController.js:453 event.clientY: 189
gameController.js:454 boardElement.offsetTop: 32
gameController.js:455 window.scrollY: 0
gameController.js:456 mousePositionOnBoardY: 157
gameController.js:457 boardBorderSize: 10
gameController.js:458 document.getElementsByClassName(square)[0].offsetHeight: 50
gameController.js:463 xPosition: 4 yPosition: 2 // incorrect!  this needs to be 1

================================================================================

var mousePositionOnBoardY = event.clientY - boardElement.offsetTop + window.scrollY;
var mousePositionOnBoardY = 189           - 32                     + 0;
var mousePositionOnBoardY = 157;

const yPosition = Math.floor((mousePositionOnBoardY - boardBorderSize) / document.getElementsByClassName('square')[0].offsetHeight*0.77); 
const yPosition = Math.floor((157 - 10) / 50 * 0.77); 
const yPosition = Math.floor((147) / 50 * 0.77); 
const yPosition = Math.floor( 147 / 50 * 0.77 ); 
const yPosition = Math.floor( 2.2638 ); 

--> Instead of making mousePositionOnBoardY a variable,
--> try making yPosition a variable and adjusting it accordingly...

================================================================================

Test moving to [0, 1, 4] bottom-center:

  Even/odd column: 0
  gameController.js:500 X: 4.5 // expected
  gameController.js:501 Y: 2.2792 // subtract 0.5 before doing floor
  gameController.js:502 curPlayer: white yPosition: 1 xPosition: 4 // correct x and y Positions now!




gameController.js:452 Even (indented) column:
gameController.js:453 event.clientY: 189
gameController.js:454 boardElement.offsetTop: 32
gameController.js:455 window.scrollY: 0
gameController.js:456 mousePositionOnBoardY: 157
gameController.js:457 boardBorderSize: 10
gameController.js:458 document.getElementsByClassName(square)[0].offsetHeight: 50
gameController.js:460 mousePositionOnBoardY: 152.5

Even/odd column: 0
gameController.js:497 X: 4.46
gameController.js:498 Y: 2.1945


var mousePositionOnBoardY = event.clientY - boardElement.offsetTop + window.scrollY;
var mousePositionOnBoardY = 185           - 32                     + 0;
var mousePositionOnBoardY = 153;


const yPosition = Math.floor((mousePositionOnBoardY - boardBorderSize) / document.getElementsByClassName('square')[0].offsetHeight*0.77); 
const yPosition = Math.floor((153                   - 10             ) / 50                                                       *0.77); 
const yPosition = Math.floor(143                                       / 38.5                                                          ); 
const yPosition = Math.floor(3.714); 
const yPosition = 3;

--> changing mousePositionOnBoardY from 153 to 152.5 had no effect on yPosition.






  Even/odd column: 0
  gameController.js:495 X: 4.46
  gameController.js:496 Y: 2.2253000000000003

var mousePositionOnBoardY = event.clientY - boardElement.offsetTop + window.scrollY;
var mousePositionOnBoardY = 187           - 32                     + 0;
var mousePositionOnBoardY = 155;

gameController.js:456 mousePositionOnBoardY: 155
(anonymous) @ gameController.js:456
gameController.js:458 mousePositionOnBoardY: 154.5


const yPosition = Math.floor((mousePositionOnBoardY - boardBorderSize) / document.getElementsByClassName('square')[0].offsetHeight*0.77);
const yPosition = Math.floor((154.5                 - 10             ) / 50                                                       *0.77);
const yPosition = Math.floor((144.5                                  ) / 38.5                                                          );
const yPosition = Math.floor(3.753                                                                                                     );
const yPosition = 3;


